<% layout('layout') -%>

<div class="flex items-center justify-between mb-4">
  <h2 class="serif text-3xl">Admin — RSVPs</h2>
  <div class="flex items-center gap-2">
    <a href="/admin/invites"
       class="rounded-lg px-3 py-2 border border-stone-300 text-sm hover:bg-stone-100">Invited List</a>
    <a href="/"
       class="rounded-lg px-3 py-2 border border-stone-300 text-sm hover:bg-stone-100">Preview</a>
    <form method="POST" action="/admin/logout" style="display:inline;">
      <input type="hidden" name="_csrf" value="<%= csrfToken %>">
      <button type="submit" class="rounded-lg px-3 py-2 border border-stone-300 text-sm hover:bg-stone-100">Logout</button>
    </form>
  </div>
</div>

<!-- Summary cards -->
<div class="grid gap-4 mb-4 md:grid-cols-3">
  <div class="p-4 bg-white rounded-xl shadow-sm">
    <div class="text-2xl font-semibold"><%= counts.total %></div>
    <div class="text-stone-500">Total Primary RSVPs</div>
  </div>
  <div class="p-4 bg-white rounded-xl shadow-sm">
    <div class="text-2xl font-semibold"><%= counts.ceremonyYes %></div>
    <div class="text-stone-500">Ceremony · Yes</div>
  </div>
  <div class="p-4 bg-white rounded-xl shadow-sm">
    <div class="text-2xl font-semibold"><%= counts.receptionYes %></div>
    <div class="text-stone-500">Reception · Yes</div>
  </div>
</div>

<!-- Filters toolbar (under counters) -->
<div class="flex items-center gap-4 mb-6">
  <!-- Row selector (filters) -->
  <div class="relative">
    <button id="rowBtn" type="button"
            class="rounded-lg px-3 py-2 border border-stone-300 text-sm hover:bg-stone-100">
      Rows
    </button>

    <div id="rowMenu"
         class="hidden absolute left-0 mt-2 w-72 bg-white border rounded-xl shadow-lg p-3 space-y-3 z-50">
      <p class="text-xs text-stone-500">Filter rows</p>

      <!-- Show all rows -->
      <button type="button" id="rowsShowAll"
              class="w-full rounded-lg border px-3 py-2 text-sm hover:bg-stone-50">
        Show all rows
      </button>

      <div class="border-t"></div>

      <!-- Duplicates / Matches -->
      <label class="flex items-center gap-2 text-sm">
        <input type="checkbox" data-dupe="name"> Same name
      </label>
      <label class="flex items-center gap-2 text-sm">
        <input type="checkbox" data-dupe="place"> Same place-card name
      </label>
      <label class="flex items-center gap-2 text-sm">
        <input type="checkbox" data-dupe="cross"> Name ↔ Place Card (across rows)
      </label>

      <div class="border-t"></div>

      <!-- Ceremony -->
      <div class="text-xs text-stone-500">Ceremony</div>
      <label class="flex items-center gap-2 text-sm">
        <input type="radio" name="ceremony" value="" checked> Any
      </label>
      <label class="flex items-center gap-2 text-sm">
        <input type="radio" name="ceremony" value="attend"> Attending
      </label>
      <label class="flex items-center gap-2 text-sm">
        <input type="radio" name="ceremony" value="not"> Not attending
      </label>

      <!-- Reception -->
      <div class="text-xs text-stone-500">Reception</div>
      <label class="flex items-center gap-2 text-sm">
        <input type="radio" name="reception" value="" checked> Any
      </label>
      <label class="flex items-center gap-2 text-sm">
        <input type="radio" name="reception" value="attend"> Attending
      </label>
      <label class="flex items-center gap-2 text-sm">
        <input type="radio" name="reception" value="not"> Not attending
      </label>

      <!-- Bottom row: match Columns layout -->
      <div class="pt-2 border-t mt-2">
        <!-- Highlight on its own line -->
        <label class="flex items-center gap-2 text-sm mb-2">
          <input type="checkbox" id="hlDupes"> Highlight duplicates
        </label>

        <!-- Separator line -->
        <div class="border-t my-2"></div>

        <!-- Next line: Select all (left) / Select none (right) -->
        <div class="flex justify-between">
          <button type="button" id="rowAll"  class="text-xs underline">Select all</button>
          <button type="button" id="rowNone" class="text-xs underline">Select none</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Column selector -->
  <div class="relative">
    <button id="colBtn" type="button"
            class="rounded-lg px-3 py-2 border border-stone-300 text-sm hover:bg-stone-100">
      Columns
    </button>
    <div id="colMenu"
         class="hidden absolute left-0 mt-2 w-56 bg-white border rounded-xl shadow-lg p-3 space-y-2 z-50">
      <p class="text-xs text-stone-500">Show/Hide columns</p>

      <label class="flex items-center gap-2 text-sm"><input type="checkbox" data-colchk="name" checked> Name</label>
      <label class="flex items-center gap-2 text-sm"><input type="checkbox" data-colchk="place" checked> Place Card Name</label>
      <label class="flex items-center gap-2 text-sm"><input type="checkbox" data-colchk="ceremony" checked> Ceremony</label>
      <label class="flex items-center gap-2 text-sm"><input type="checkbox" data-colchk="reception" checked> Reception</label>
      <label class="flex items-center gap-2 text-sm"><input type="checkbox" data-colchk="dietary" checked> Dietary</label>
      <label class="flex items-center gap-2 text-sm"><input type="checkbox" data-colchk="transport" checked> Transport</label>
      <label class="flex items-center gap-2 text-sm"><input type="checkbox" data-colchk="driving" checked> Driving</label>
      <label class="flex items-center gap-2 text-sm"><input type="checkbox" data-colchk="printed" checked> Printed</label>
      <label class="flex items-center gap-2 text-sm"><input type="checkbox" data-colchk="notes" checked> Notes</label>
      <label class="flex items-center gap-2 text-sm"><input type="checkbox" data-colchk="when" checked> When</label>

      <div class="flex justify-between pt-2 border-t mt-2">
        <button type="button" id="colAll" class="text-xs underline">Select all</button>
        <button type="button" id="colNone" class="text-xs underline">Select none</button>
      </div>
    </div>
  </div>
</div>

<div class="overflow-x-auto">
  <!-- V.3 - Final Delete Fix -->
  <table class="w-full text-sm bg-white rounded-xl shadow-sm overflow-hidden">
    <thead class="bg-stone-100">
      <tr>
        <th class="text-left p-3" data-col="name">Name</th>
        <th class="text-left p-3" data-col="place">Place Card Name</th>
        <th class="text-left p-3" data-col="ceremony">Ceremony</th>
        <th class="text-left p-3" data-col="reception">Reception</th>
        <th class="text-left p-3" data-col="dietary">Dietary</th>
        <th class="text-left p-3" data-col="transport">Transport</th>
        <th class="text-left p-3" data-col="driving">Driving</th>
        <th class="text-left p-3" data-col="printed">Printed</th>
        <th class="text-left p-3" data-col="notes">Notes</th>
        <th class="text-left p-3" data-col="when">When</th>
        <th class="text-left p-3">Actions</th>
      </tr>
    </thead>
    <tbody>
      <% rows.forEach(row => { const dupes = Array.isArray(row._dupes) ? row._dupes.join(',') : ''; %>
        <tr class="border-t align-top"
            data-name="<%= (row.name || '').trim().toLowerCase() %>"
            data-place="<%= (row.placeCardName || '').trim().toLowerCase() %>"
            data-cer="<%= row.ceremony === true ? 'yes' : (row.ceremony === false ? 'no' : 'na') %>"
            data-rec="<%= row.reception === true ? 'yes' : (row.reception === false ? 'no' : 'na') %>"
            data-dupes="<%= dupes %>"
            data-group="<%= row.group %>"
            data-max-guests="<%= row.maxGuests %>"
            data-invite-id="<%= row.inviteId %>"
            data-kind="<%= row.kind %>"
            data-guest-id="<%= row.id %>">

          <td class="p-3" data-col="name">
            <div class="<%= row.kind === 'GUEST' ? 'font-medium' : '' %>"><%= row.name || '' %></div>
            <% if (row.kind === 'GUEST' && row.addedBy) { %>
              <div class="text-xs text-stone-500">+1 of <%= row.addedBy %></div>
            <% } %>
          </td>

          <td class="p-3" data-col="place"><%= row.placeCardName || '' %></td>
          <td class="p-3" data-col="ceremony"><%= row.ceremony === true ? 'Yes' : (row.ceremony === false ? 'No' : '—') %></td>
          <td class="p-3" data-col="reception"><%= row.reception === true ? 'Yes' : (row.reception === false ? 'No' : '—') %></td>
          <td class="p-3" data-col="dietary"><%= row.dietary || '' %></td>
          <td class="p-3" data-col="transport"><%= row.transport === true ? 'Yes' : (row.transport === false ? 'No' : '—') %></td>
          <td class="p-3" data-col="driving"><%= row.driving === true ? 'Yes' : (row.driving === false ? 'No' : '—') %></td>
          <td class="p-3" data-col="printed"><%= row.printedInvite === true ? 'Yes' : (row.printedInvite === false ? 'No' : '—') %></td>
          <td class="p-3 whitespace-pre-wrap break-words" data-col="notes"><%= row.notes || '' %></td>
          <td class="p-3 whitespace-nowrap" data-col="when"><%= new Date(row.when).toLocaleString() %></td>
          <!-- CORRECTED DELETE FORMS -->
          <td class="p-3 whitespace-nowrap">
            <% if (row.kind === 'RSVP') { %>
              <button type="button" class="text-xs underline edit-btn">Edit</button>
              <!-- This form correctly points to the /admin/rsvps/:id/delete route -->
              <form method="POST" action="/admin/rsvps/<%= row.id %>/delete" class="inline-block ml-2" onsubmit="return confirm('Are you sure you want to delete this guest and all their +1s?');">
                <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                <button type="submit" class="text-xs underline text-red-600">Delete</button>
              </form>
            <% } else { %>
              <span class="text-xs text-stone-400">—</span>
              <!-- This form correctly points to the /admin/guests/:id/delete route -->
              <form method="POST" action="/admin/guests/<%= row.id %>/delete" class="inline-block ml-2" onsubmit="return confirm('Are you sure you want to delete this +1 guest?');">
                <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                <button type="submit" class="text-xs underline text-red-600">Delete</button>
              </form>
            <% } %>
          </td>
        </tr>
      <% }) %>
    </tbody>
  </table>
</div>

<!-- Add Guest Modal -->
<div id="addModal" class="fixed inset-0 bg-black/50 hidden items-center justify-center p-4">
  <div class="max-w-sm w-full bg-white rounded-2xl shadow-xl p-6">
    <h3 class="serif text-xl mb-4">Add Guest</h3>
    <form method="post" action="/admin/invites/create-primary" class="space-y-4" id="addGuestForm">
      <input type="hidden" name="_csrf" value="<%= csrfToken %>">
      <div>
        <p class="font-medium">Access name</p>
        <input name="guestName" required class="w-full rounded-lg border px-3 py-2" placeholder="e.g., Alice Smith">
      </div>
      <div>
        <p class="font-medium">Access code</p>
        <input name="accessCode" required class="w-full rounded-lg border px-3 py-2" placeholder="e.g., ALICE-2025">
      </div>
      <div>
        <p class="font-medium">Group</p>
        <select name="inviteGroup" class="w-full rounded-lg border px-3 py-2">
          <option value="guest" selected>Guest</option>
          <option value="family">Family</option>
          <option value="bridesmaids">Bridesmaids</option>
          <option value="groomsmen">Groomsmen</option>
        </select>
      </div>

      <p id="addGuestErr" class="text-sm text-red-600 hidden"></p>

      <div class="flex justify-end gap-2">
        <button type="button" id="closeAdd" class="px-4 py-2 border rounded-lg">Cancel</button>
        <button type="submit" class="px-4 py-2 rounded-lg bg-stone-900 text-white hover:bg-stone-800">Create</button>
      </div>
    </form>
  </div>
</div>

<!-- Edit Guest Modal -->
<div id="editModal" class="fixed inset-0 bg-black/50 hidden items-center justify-center p-4">
  <div class="max-w-sm w-full bg-white rounded-2xl shadow-xl p-6">
    <h3 class="serif text-xl mb-4">Edit Guest</h3>
    <form method="post" action="" class="space-y-4" id="editGuestForm">
      <input type="hidden" name="_csrf" value="<%= csrfToken %>">
      <div>
        <p class="font-medium">Access name</p>
        <input name="accessName" required class="w-full rounded-lg border px-3 py-2" placeholder="e.g., Alice Smith">
      </div>
      <div>
        <p class="font-medium">New Access code (optional)</p>
        <input name="accessCode" class="w-full rounded-lg border px-3 py-2" placeholder="Leave blank to keep same code">
      </div>
      <div>
        <p class="font-medium">Group</p>
        <select name="inviteGroup" class="w-full rounded-lg border px-3 py-2">
          <option value="guest">Guest</option>
          <option value="family">Family</option>
          <option value="bridesmaids">Bridesmaids</option>
          <option value="groomsmen">Groomsmen</option>
        </select>
      </div>
      <div>
        <p class="font-medium">Max Guests</p>
        <input name="maxGuests" type="number" min="0" class="w-full rounded-lg border px-3 py-2" placeholder="e.g., 1">
      </div>

      <p id="editGuestErr" class="text-sm text-red-600 hidden"></p>

      <div class="flex justify-end gap-2">
        <button type="button" id="closeEdit" class="px-4 py-2 border rounded-lg">Cancel</button>
        <button type="submit" class="px-4 py-2 rounded-lg bg-stone-900 text-white hover:bg-stone-800">Save Changes</button>
      </div>
    </form>
  </div>
</div>

<div class="mt-4">
  <button id="openAdd" class="rounded-lg px-4 py-2 bg-stone-900 text-white hover:bg-stone-800 text-sm">
    Add Guest
  </button>
</div>

<script>
  // ----- Add Guest modal -----
  (function(){
    const modal = document.getElementById('addModal');
    const form  = document.getElementById('addGuestForm');
    const errEl = document.getElementById('addGuestErr');

    const showModal = () => { modal.classList.remove('hidden'); modal.classList.add('flex'); };
    const hideModal = () => { modal.classList.add('hidden'); modal.classList.remove('flex'); };

    document.getElementById('openAdd')?.addEventListener('click', () => {
      errEl?.classList.add('hidden'); errEl.textContent = '';
      showModal();
    });
    document.getElementById('closeAdd')?.addEventListener('click', hideModal);

    form?.addEventListener('submit', async (e) => {
      e.preventDefault();
      errEl?.classList.add('hidden'); errEl.textContent = '';

      const fd   = new FormData(form);
      const body = new URLSearchParams(fd);

      try {
        const res = await fetch(form.action, {
          method: 'POST',
          body,
          credentials: 'same-origin',
          headers: {
            'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',
            'csrf-token': fd.get('_csrf') || ''
          }
        });

        if (!res.ok) {
          const text = (await res.text() || 'Error');
          errEl.textContent = text;
          errEl.classList.remove('hidden');
          return;
        }

        window.location.reload();
      } catch (err) {
        errEl.textContent = 'Unexpected error: ' + err.message;
        errEl.classList.remove('hidden');
      }
    });
  })();

  // ----- Edit Guest modal -----
  (function(){
    const modal = document.getElementById('editModal');
    const form  = document.getElementById('editGuestForm');
    const errEl = document.getElementById('editGuestErr');

    const showModal = () => { modal.classList.remove('hidden'); modal.classList.add('flex'); };
    const hideModal = () => { modal.classList.add('hidden'); modal.classList.remove('flex'); };

    document.querySelectorAll('.edit-btn').forEach(btn => {
      btn.addEventListener('click', (e) => {
        const tr = e.target.closest('tr');
        const inviteId = tr.dataset.inviteId;
        const name = tr.querySelector('[data-col="name"]').innerText;
        const group = tr.dataset.group;
        const maxGuests = tr.dataset.maxGuests;

        form.action = `/admin/invites/${inviteId}/update`;
        form.querySelector('[name="accessName"]').value = name;
        form.querySelector('[name="inviteGroup"]').value = group;
        form.querySelector('[name="maxGuests"]').value = maxGuests;

        errEl?.classList.add('hidden');
        errEl.textContent = '';
        showModal();
      });
    });

    document.getElementById('closeEdit')?.addEventListener('click', hideModal);

    form?.addEventListener('submit', async (e) => {
      e.preventDefault();
      errEl?.classList.add('hidden'); errEl.textContent = '';

      const fd   = new FormData(form);
      const body = new URLSearchParams(fd);

      try {
        const res = await fetch(form.action, {
          method: 'POST',
          body,
          credentials: 'same-origin',
          headers: {
            'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',
            'csrf-token': fd.get('_csrf') || ''
          }
        });

        if (!res.ok) {
          const text = (await res.text() || 'Error');
          errEl.textContent = text;
          errEl.classList.remove('hidden');
          return;
        }

        window.location.reload();
      } catch (err) {
        errEl.textContent = 'Unexpected error: ' + err.message;
        errEl.classList.remove('hidden');
      }
    });
  })();
</script>
