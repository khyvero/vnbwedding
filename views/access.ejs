<% layout('layout', { pageTitle: 'Access' }) -%>

<%- include('partials/main-header', { page: 'access', viewer, csrfToken }) %>

<div class="max-w-md mx-auto px-4 pt-40 pb-12">
  <h2 class="serif text-3xl mb-6 text-center">Enter Access Code</h2>
  <form id="pageAccessForm" method="post" action="/access" class="space-y-4 bg-white p-6 rounded-xl shadow-sm border border-stone-200">
    <input type="hidden" name="_csrf" value="<%= csrfToken %>">
    <input type="hidden" name="next" value="<%= next %>">
    <input name="code" placeholder="e.g., ALICE-2025" required class="w-full rounded-lg border-stone-300 px-3 py-2 focus:ring-2 focus:ring-[#1E2A44]/50 focus:border-[#1E2A44]">
    
    <!-- Container for server-rendered and client-side errors -->
    <p id="pageAccessError" class="text-sm text-red-600 <% if (!error) { %>hidden<% } %>">
      <%= error || '' %>
    </p>
    
    <button class="w-full rounded-xl px-5 py-3 bg-[#1E2A44] text-white hover:bg-[#2a3b5a] transition-colors">Continue</button>
  </form>
</div>

<%- block('scripts').append(
  `<script>
    (function() {
      const form = document.getElementById('pageAccessForm');
      const errorEl = document.getElementById('pageAccessError');

      form?.addEventListener('submit', async (event) => {
        event.preventDefault();
        errorEl.classList.add('hidden');
        errorEl.textContent = '';

        const token = form.querySelector('input[name="_csrf"]').value;
        const formData = new FormData(form);
        const payload = Object.fromEntries(formData);

        try {
          const response = await fetch('/access', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'CSRF-Token': token
            },
            body: JSON.stringify(payload)
          });

          const result = await response.json();

          if (response.ok && result.success) {
            window.location.href = result.next || '/';
          } else {
            errorEl.textContent = result.error || 'An unknown error occurred.';
            errorEl.classList.remove('hidden');
          }
        } catch (err) {
          errorEl.textContent = 'A network error occurred. Please try again.';
          errorEl.classList.remove('hidden');
        }
      });
    })();
  </script>`
) %>
